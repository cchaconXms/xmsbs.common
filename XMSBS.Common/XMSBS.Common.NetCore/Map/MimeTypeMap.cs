using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace XMSBS.Common.NetCore.Map
{
    public static class MimeTypeMap
    {

        private static readonly Lazy<ConcurrentDictionary<string, string>> _mappings = new Lazy<ConcurrentDictionary<string, string>>(BuildMappings);

        //private static readonly Lazy<IDictionary<string, string>> _mappings = new Lazy<IDictionary<string, string>>(BuildMappings);

        private static ConcurrentDictionary<string, string> BuildMappings()
        {
            var mappings = new ConcurrentDictionary<string, string>(StringComparer.InvariantCultureIgnoreCase);
            mappings.TryAdd(".323", "text/h323");
            mappings.TryAdd(".3g2", "video/3gpp2");
            mappings.TryAdd(".3gp", "video/3gpp");
            mappings.TryAdd(".3gp2", "video/3gpp2");
            mappings.TryAdd(".3gpp", "video/3gpp");
            mappings.TryAdd(".7z", "application/x-7z-compressed");
            mappings.TryAdd(".aa", "audio/audible");
            mappings.TryAdd(".AAC", "audio/aac");
            mappings.TryAdd(".aaf", "application/octet-stream");
            mappings.TryAdd(".aax", "audio/vnd.audible.aax");
            mappings.TryAdd(".ac3", "audio/ac3");
            mappings.TryAdd(".aca", "application/octet-stream");
            mappings.TryAdd(".accda", "application/msaccess.addin");
            mappings.TryAdd(".accdb", "application/msaccess");
            mappings.TryAdd(".accdc", "application/msaccess.cab");
            mappings.TryAdd(".accde", "application/msaccess");
            mappings.TryAdd(".accdr", "application/msaccess.runtime");
            mappings.TryAdd(".accdt", "application/msaccess");
            mappings.TryAdd(".accdw", "application/msaccess.webapplication");
            mappings.TryAdd(".accft", "application/msaccess.ftemplate");
            mappings.TryAdd(".acx", "application/internet-property-stream");
            mappings.TryAdd(".AddIn", "text/xml");
            mappings.TryAdd(".ade", "application/msaccess");
            mappings.TryAdd(".adobebridge", "application/x-bridge-url");
            mappings.TryAdd(".adp", "application/msaccess");
            mappings.TryAdd(".ADT", "audio/vnd.dlna.adts");
            mappings.TryAdd(".ADTS", "audio/aac");
            mappings.TryAdd(".afm", "application/octet-stream");
            mappings.TryAdd(".ai", "application/postscript");
            mappings.TryAdd(".aif", "audio/x-aiff");
            mappings.TryAdd(".aifc", "audio/aiff");
            mappings.TryAdd(".aiff", "audio/aiff");
            mappings.TryAdd(".air", "application/vnd.adobe.air-application-installer-package+zip");
            mappings.TryAdd(".amc", "application/x-mpeg");
            mappings.TryAdd(".application", "application/x-ms-application");
            mappings.TryAdd(".art", "image/x-jg");
            mappings.TryAdd(".asa", "application/xml");
            mappings.TryAdd(".asax", "application/xml");
            mappings.TryAdd(".ascx", "application/xml");
            mappings.TryAdd(".asd", "application/octet-stream");
            mappings.TryAdd(".asf", "video/x-ms-asf");
            mappings.TryAdd(".ashx", "application/xml");
            mappings.TryAdd(".asi", "application/octet-stream");
            mappings.TryAdd(".asm", "text/plain");
            mappings.TryAdd(".asmx", "application/xml");
            mappings.TryAdd(".aspx", "application/xml");
            mappings.TryAdd(".asr", "video/x-ms-asf");
            mappings.TryAdd(".asx", "video/x-ms-asf");
            mappings.TryAdd(".atom", "application/atom+xml");
            mappings.TryAdd(".au", "audio/basic");
            mappings.TryAdd(".avi", "video/x-msvideo");
            mappings.TryAdd(".axs", "application/olescript");
            mappings.TryAdd(".bas", "text/plain");
            mappings.TryAdd(".bcpio", "application/x-bcpio");
            mappings.TryAdd(".bin", "application/octet-stream");
            mappings.TryAdd(".bmp", "image/bmp");
            mappings.TryAdd(".c", "text/plain");
            mappings.TryAdd(".cab", "application/octet-stream");
            mappings.TryAdd(".caf", "audio/x-caf");
            mappings.TryAdd(".calx", "application/vnd.ms-office.calx");
            mappings.TryAdd(".cat", "application/vnd.ms-pki.seccat");
            mappings.TryAdd(".cc", "text/plain");
            mappings.TryAdd(".cd", "text/plain");
            mappings.TryAdd(".cdda", "audio/aiff");
            mappings.TryAdd(".cdf", "application/x-cdf");
            mappings.TryAdd(".cer", "application/x-x509-ca-cert");
            mappings.TryAdd(".chm", "application/octet-stream");
            mappings.TryAdd(".class", "application/x-java-applet");
            mappings.TryAdd(".clp", "application/x-msclip");
            mappings.TryAdd(".cmx", "image/x-cmx");
            mappings.TryAdd(".cnf", "text/plain");
            mappings.TryAdd(".cod", "image/cis-cod");
            mappings.TryAdd(".config", "application/xml");
            mappings.TryAdd(".contact", "text/x-ms-contact");
            mappings.TryAdd(".coverage", "application/xml");
            mappings.TryAdd(".cpio", "application/x-cpio");
            mappings.TryAdd(".cpp", "text/plain");
            mappings.TryAdd(".crd", "application/x-mscardfile");
            mappings.TryAdd(".crl", "application/pkix-crl");
            mappings.TryAdd(".crt", "application/x-x509-ca-cert");
            mappings.TryAdd(".cs", "text/plain");
            mappings.TryAdd(".csdproj", "text/plain");
            mappings.TryAdd(".csh", "application/x-csh");
            mappings.TryAdd(".csproj", "text/plain");
            mappings.TryAdd(".css", "text/css");
            mappings.TryAdd(".csv", "text/csv");
            mappings.TryAdd(".cur", "application/octet-stream");
            mappings.TryAdd(".cxx", "text/plain");
            mappings.TryAdd(".dat", "application/octet-stream");
            mappings.TryAdd(".datasource", "application/xml");
            mappings.TryAdd(".dbproj", "text/plain");
            mappings.TryAdd(".dcr", "application/x-director");
            mappings.TryAdd(".def", "text/plain");
            mappings.TryAdd(".deploy", "application/octet-stream");
            mappings.TryAdd(".der", "application/x-x509-ca-cert");
            mappings.TryAdd(".dgml", "application/xml");
            mappings.TryAdd(".dib", "image/bmp");
            mappings.TryAdd(".dif", "video/x-dv");
            mappings.TryAdd(".dir", "application/x-director");
            mappings.TryAdd(".disco", "text/xml");
            mappings.TryAdd(".divx", "video/divx");
            mappings.TryAdd(".dll", "application/x-msdownload");
            mappings.TryAdd(".dll.config", "text/xml");
            mappings.TryAdd(".dlm", "text/dlm");
            mappings.TryAdd(".doc", "application/msword");
            mappings.TryAdd(".docm", "application/vnd.ms-word.document.macroEnabled.12");
            mappings.TryAdd(".docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document");
            mappings.TryAdd(".dot", "application/msword");
            mappings.TryAdd(".dotm", "application/vnd.ms-word.template.macroEnabled.12");
            mappings.TryAdd(".dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template");
            mappings.TryAdd(".dsp", "application/octet-stream");
            mappings.TryAdd(".dsw", "text/plain");
            mappings.TryAdd(".dtd", "text/xml");
            mappings.TryAdd(".dtsConfig", "text/xml");
            mappings.TryAdd(".dv", "video/x-dv");
            mappings.TryAdd(".dvi", "application/x-dvi");
            mappings.TryAdd(".dwf", "drawing/x-dwf");
            mappings.TryAdd(".dwp", "application/octet-stream");
            mappings.TryAdd(".dxr", "application/x-director");
            mappings.TryAdd(".eml", "message/rfc822");
            mappings.TryAdd(".emz", "application/octet-stream");
            mappings.TryAdd(".eot", "application/octet-stream");
            mappings.TryAdd(".eps", "application/postscript");
            mappings.TryAdd(".etl", "application/etl");
            mappings.TryAdd(".etx", "text/x-setext");
            mappings.TryAdd(".evy", "application/envoy");
            mappings.TryAdd(".exe", "application/octet-stream");
            mappings.TryAdd(".exe.config", "text/xml");
            mappings.TryAdd(".fdf", "application/vnd.fdf");
            mappings.TryAdd(".fif", "application/fractals");
            mappings.TryAdd(".filters", "application/xml");
            mappings.TryAdd(".fla", "application/octet-stream");
            mappings.TryAdd(".flr", "x-world/x-vrml");
            mappings.TryAdd(".flv", "video/x-flv");
            mappings.TryAdd(".fsscript", "application/fsharp-script");
            mappings.TryAdd(".fsx", "application/fsharp-script");
            mappings.TryAdd(".generictest", "application/xml");
            mappings.TryAdd(".gif", "image/gif");
            mappings.TryAdd(".group", "text/x-ms-group");
            mappings.TryAdd(".gsm", "audio/x-gsm");
            mappings.TryAdd(".gtar", "application/x-gtar");
            mappings.TryAdd(".gz", "application/x-gzip");
            mappings.TryAdd(".h", "text/plain");
            mappings.TryAdd(".hdf", "application/x-hdf");
            mappings.TryAdd(".hdml", "text/x-hdml");
            mappings.TryAdd(".hhc", "application/x-oleobject");
            mappings.TryAdd(".hhk", "application/octet-stream");
            mappings.TryAdd(".hhp", "application/octet-stream");
            mappings.TryAdd(".hlp", "application/winhlp");
            mappings.TryAdd(".hpp", "text/plain");
            mappings.TryAdd(".hqx", "application/mac-binhex40");
            mappings.TryAdd(".hta", "application/hta");
            mappings.TryAdd(".htc", "text/x-component");
            mappings.TryAdd(".htm", "text/html");
            mappings.TryAdd(".html", "text/html");
            mappings.TryAdd(".htt", "text/webviewhtml");
            mappings.TryAdd(".hxa", "application/xml");
            mappings.TryAdd(".hxc", "application/xml");
            mappings.TryAdd(".hxd", "application/octet-stream");
            mappings.TryAdd(".hxe", "application/xml");
            mappings.TryAdd(".hxf", "application/xml");
            mappings.TryAdd(".hxh", "application/octet-stream");
            mappings.TryAdd(".hxi", "application/octet-stream");
            mappings.TryAdd(".hxk", "application/xml");
            mappings.TryAdd(".hxq", "application/octet-stream");
            mappings.TryAdd(".hxr", "application/octet-stream");
            mappings.TryAdd(".hxs", "application/octet-stream");
            mappings.TryAdd(".hxt", "text/html");
            mappings.TryAdd(".hxv", "application/xml");
            mappings.TryAdd(".hxw", "application/octet-stream");
            mappings.TryAdd(".hxx", "text/plain");
            mappings.TryAdd(".i", "text/plain");
            mappings.TryAdd(".ico", "image/x-icon");
            mappings.TryAdd(".ics", "application/octet-stream");
            mappings.TryAdd(".idl", "text/plain");
            mappings.TryAdd(".ief", "image/ief");
            mappings.TryAdd(".iii", "application/x-iphone");
            mappings.TryAdd(".inc", "text/plain");
            mappings.TryAdd(".inf", "application/octet-stream");
            mappings.TryAdd(".inl", "text/plain");
            mappings.TryAdd(".ins", "application/x-internet-signup");
            mappings.TryAdd(".ipa", "application/x-itunes-ipa");
            mappings.TryAdd(".ipg", "application/x-itunes-ipg");
            mappings.TryAdd(".ipproj", "text/plain");
            mappings.TryAdd(".ipsw", "application/x-itunes-ipsw");
            mappings.TryAdd(".iqy", "text/x-ms-iqy");
            mappings.TryAdd(".isp", "application/x-internet-signup");
            mappings.TryAdd(".ite", "application/x-itunes-ite");
            mappings.TryAdd(".itlp", "application/x-itunes-itlp");
            mappings.TryAdd(".itms", "application/x-itunes-itms");
            mappings.TryAdd(".itpc", "application/x-itunes-itpc");
            mappings.TryAdd(".IVF", "video/x-ivf");
            mappings.TryAdd(".jar", "application/java-archive");
            mappings.TryAdd(".java", "application/octet-stream");
            mappings.TryAdd(".jck", "application/liquidmotion");
            mappings.TryAdd(".jcz", "application/liquidmotion");
            mappings.TryAdd(".jfif", "image/pjpeg");
            mappings.TryAdd(".jnlp", "application/x-java-jnlp-file");
            mappings.TryAdd(".jpb", "application/octet-stream");
            mappings.TryAdd(".jpe", "image/jpeg");
            mappings.TryAdd(".jpeg", "image/jpeg");
            mappings.TryAdd(".jpg", "image/jpeg");
            mappings.TryAdd(".js", "application/x-javascript");
            mappings.TryAdd(".json", "application/json");
            mappings.TryAdd(".jsx", "text/jscript");
            mappings.TryAdd(".jsxbin", "text/plain");
            mappings.TryAdd(".latex", "application/x-latex");
            mappings.TryAdd(".library-ms", "application/windows-library+xml");
            mappings.TryAdd(".lit", "application/x-ms-reader");
            mappings.TryAdd(".loadtest", "application/xml");
            mappings.TryAdd(".lpk", "application/octet-stream");
            mappings.TryAdd(".lsf", "video/x-la-asf");
            mappings.TryAdd(".lst", "text/plain");
            mappings.TryAdd(".lsx", "video/x-la-asf");
            mappings.TryAdd(".lzh", "application/octet-stream");
            mappings.TryAdd(".m13", "application/x-msmediaview");
            mappings.TryAdd(".m14", "application/x-msmediaview");
            mappings.TryAdd(".m1v", "video/mpeg");
            mappings.TryAdd(".m2t", "video/vnd.dlna.mpeg-tts");
            mappings.TryAdd(".m2ts", "video/vnd.dlna.mpeg-tts");
            mappings.TryAdd(".m2v", "video/mpeg");
            mappings.TryAdd(".m3u", "audio/x-mpegurl");
            mappings.TryAdd(".m3u8", "audio/x-mpegurl");
            mappings.TryAdd(".m4a", "audio/m4a");
            mappings.TryAdd(".m4b", "audio/m4b");
            mappings.TryAdd(".m4p", "audio/m4p");
            mappings.TryAdd(".m4r", "audio/x-m4r");
            mappings.TryAdd(".m4v", "video/x-m4v");
            mappings.TryAdd(".mac", "image/x-macpaint");
            mappings.TryAdd(".mak", "text/plain");
            mappings.TryAdd(".man", "application/x-troff-man");
            mappings.TryAdd(".manifest", "application/x-ms-manifest");
            mappings.TryAdd(".map", "text/plain");
            mappings.TryAdd(".master", "application/xml");
            mappings.TryAdd(".mda", "application/msaccess");
            mappings.TryAdd(".mdb", "application/x-msaccess");
            mappings.TryAdd(".mde", "application/msaccess");
            mappings.TryAdd(".mdp", "application/octet-stream");
            mappings.TryAdd(".me", "application/x-troff-me");
            mappings.TryAdd(".mfp", "application/x-shockwave-flash");
            mappings.TryAdd(".mht", "message/rfc822");
            mappings.TryAdd(".mhtml", "message/rfc822");
            mappings.TryAdd(".mid", "audio/mid");
            mappings.TryAdd(".midi", "audio/mid");
            mappings.TryAdd(".mix", "application/octet-stream");
            mappings.TryAdd(".mk", "text/plain");
            mappings.TryAdd(".mmf", "application/x-smaf");
            mappings.TryAdd(".mno", "text/xml");
            mappings.TryAdd(".mny", "application/x-msmoney");
            mappings.TryAdd(".mod", "video/mpeg");
            mappings.TryAdd(".mov", "video/quicktime");
            mappings.TryAdd(".movie", "video/x-sgi-movie");
            mappings.TryAdd(".mp2", "video/mpeg");
            mappings.TryAdd(".mp2v", "video/mpeg");
            mappings.TryAdd(".mp3", "audio/mpeg");
            mappings.TryAdd(".mp4", "video/mp4");
            mappings.TryAdd(".mp4v", "video/mp4");
            mappings.TryAdd(".mpa", "video/mpeg");
            mappings.TryAdd(".mpe", "video/mpeg");
            mappings.TryAdd(".mpeg", "video/mpeg");
            mappings.TryAdd(".mpf", "application/vnd.ms-mediapackage");
            mappings.TryAdd(".mpg", "video/mpeg");
            mappings.TryAdd(".mpp", "application/vnd.ms-project");
            mappings.TryAdd(".mpv2", "video/mpeg");
            mappings.TryAdd(".mqv", "video/quicktime");
            mappings.TryAdd(".ms", "application/x-troff-ms");
            mappings.TryAdd(".msi", "application/octet-stream");
            mappings.TryAdd(".mso", "application/octet-stream");
            mappings.TryAdd(".mts", "video/vnd.dlna.mpeg-tts");
            mappings.TryAdd(".mtx", "application/xml");
            mappings.TryAdd(".mvb", "application/x-msmediaview");
            mappings.TryAdd(".mvc", "application/x-miva-compiled");
            mappings.TryAdd(".mxp", "application/x-mmxp");
            mappings.TryAdd(".nc", "application/x-netcdf");
            mappings.TryAdd(".nsc", "video/x-ms-asf");
            mappings.TryAdd(".nws", "message/rfc822");
            mappings.TryAdd(".ocx", "application/octet-stream");
            mappings.TryAdd(".oda", "application/oda");
            mappings.TryAdd(".odb", "application/vnd.oasis.opendocument.database");
            mappings.TryAdd(".odc", "application/vnd.oasis.opendocument.chart");
            mappings.TryAdd(".odf", "application/vnd.oasis.opendocument.formula");
            mappings.TryAdd(".odg", "application/vnd.oasis.opendocument.graphics");
            mappings.TryAdd(".odh", "text/plain");
            mappings.TryAdd(".odi", "application/vnd.oasis.opendocument.image");
            mappings.TryAdd(".odl", "text/plain");
            mappings.TryAdd(".odm", "application/vnd.oasis.opendocument.text-master");
            mappings.TryAdd(".odp", "application/vnd.oasis.opendocument.presentation");
            mappings.TryAdd(".ods", "application/vnd.oasis.opendocument.spreadsheet");
            mappings.TryAdd(".odt", "application/vnd.oasis.opendocument.text");
            mappings.TryAdd(".ogv", "video/ogg");
            mappings.TryAdd(".one", "application/onenote");
            mappings.TryAdd(".onea", "application/onenote");
            mappings.TryAdd(".onepkg", "application/onenote");
            mappings.TryAdd(".onetmp", "application/onenote");
            mappings.TryAdd(".onetoc", "application/onenote");
            mappings.TryAdd(".onetoc2", "application/onenote");
            mappings.TryAdd(".orderedtest", "application/xml");
            mappings.TryAdd(".osdx", "application/opensearchdescription+xml");
            mappings.TryAdd(".otg", "application/vnd.oasis.opendocument.graphics-template");
            mappings.TryAdd(".oth", "application/vnd.oasis.opendocument.text-web");
            mappings.TryAdd(".otp", "application/vnd.oasis.opendocument.presentation-template");
            mappings.TryAdd(".ots", "application/vnd.oasis.opendocument.spreadsheet-template");
            mappings.TryAdd(".ott", "application/vnd.oasis.opendocument.text-template");
            mappings.TryAdd(".oxt", "application/vnd.openofficeorg.extension");
            mappings.TryAdd(".p10", "application/pkcs10");
            mappings.TryAdd(".p12", "application/x-pkcs12");
            mappings.TryAdd(".p7b", "application/x-pkcs7-certificates");
            mappings.TryAdd(".p7c", "application/pkcs7-mime");
            mappings.TryAdd(".p7m", "application/pkcs7-mime");
            mappings.TryAdd(".p7r", "application/x-pkcs7-certreqresp");
            mappings.TryAdd(".p7s", "application/pkcs7-signature");
            mappings.TryAdd(".pbm", "image/x-portable-bitmap");
            mappings.TryAdd(".pcast", "application/x-podcast");
            mappings.TryAdd(".pct", "image/pict");
            mappings.TryAdd(".pcx", "application/octet-stream");
            mappings.TryAdd(".pcz", "application/octet-stream");
            mappings.TryAdd(".pdf", "application/pdf");
            mappings.TryAdd(".pfb", "application/octet-stream");
            mappings.TryAdd(".pfm", "application/octet-stream");
            mappings.TryAdd(".pfx", "application/x-pkcs12");
            mappings.TryAdd(".pgm", "image/x-portable-graymap");
            mappings.TryAdd(".pic", "image/pict");
            mappings.TryAdd(".pict", "image/pict");
            mappings.TryAdd(".pkgdef", "text/plain");
            mappings.TryAdd(".pkgundef", "text/plain");
            mappings.TryAdd(".pko", "application/vnd.ms-pki.pko");
            mappings.TryAdd(".pls", "audio/scpls");
            mappings.TryAdd(".pma", "application/x-perfmon");
            mappings.TryAdd(".pmc", "application/x-perfmon");
            mappings.TryAdd(".pml", "application/x-perfmon");
            mappings.TryAdd(".pmr", "application/x-perfmon");
            mappings.TryAdd(".pmw", "application/x-perfmon");
            mappings.TryAdd(".png", "image/png");
            mappings.TryAdd(".pnm", "image/x-portable-anymap");
            mappings.TryAdd(".pnt", "image/x-macpaint");
            mappings.TryAdd(".pntg", "image/x-macpaint");
            mappings.TryAdd(".pnz", "image/png");
            mappings.TryAdd(".pot", "application/vnd.ms-powerpoint");
            mappings.TryAdd(".potm", "application/vnd.ms-powerpoint.template.macroEnabled.12");
            mappings.TryAdd(".potx", "application/vnd.openxmlformats-officedocument.presentationml.template");
            mappings.TryAdd(".ppa", "application/vnd.ms-powerpoint");
            mappings.TryAdd(".ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12");
            mappings.TryAdd(".ppm", "image/x-portable-pixmap");
            mappings.TryAdd(".pps", "application/vnd.ms-powerpoint");
            mappings.TryAdd(".ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12");
            mappings.TryAdd(".ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow");
            mappings.TryAdd(".ppt", "application/vnd.ms-powerpoint");
            mappings.TryAdd(".pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12");
            mappings.TryAdd(".pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation");
            mappings.TryAdd(".prf", "application/pics-rules");
            mappings.TryAdd(".prm", "application/octet-stream");
            mappings.TryAdd(".prx", "application/octet-stream");
            mappings.TryAdd(".ps", "application/postscript");
            mappings.TryAdd(".psc1", "application/PowerShell");
            mappings.TryAdd(".psd", "application/octet-stream");
            mappings.TryAdd(".psess", "application/xml");
            mappings.TryAdd(".psm", "application/octet-stream");
            mappings.TryAdd(".psp", "application/octet-stream");
            mappings.TryAdd(".pub", "application/x-mspublisher");
            mappings.TryAdd(".pwz", "application/vnd.ms-powerpoint");
            mappings.TryAdd(".qht", "text/x-html-insertion");
            mappings.TryAdd(".qhtm", "text/x-html-insertion");
            mappings.TryAdd(".qt", "video/quicktime");
            mappings.TryAdd(".qti", "image/x-quicktime");
            mappings.TryAdd(".qtif", "image/x-quicktime");
            mappings.TryAdd(".qtl", "application/x-quicktimeplayer");
            mappings.TryAdd(".qxd", "application/octet-stream");
            mappings.TryAdd(".ra", "audio/x-pn-realaudio");
            mappings.TryAdd(".ram", "audio/x-pn-realaudio");
            mappings.TryAdd(".rar", "application/octet-stream");
            mappings.TryAdd(".ras", "image/x-cmu-raster");
            mappings.TryAdd(".rat", "application/rat-file");
            mappings.TryAdd(".rc", "text/plain");
            mappings.TryAdd(".rc2", "text/plain");
            mappings.TryAdd(".rct", "text/plain");
            mappings.TryAdd(".rdlc", "application/xml");
            mappings.TryAdd(".resx", "application/xml");
            mappings.TryAdd(".rf", "image/vnd.rn-realflash");
            mappings.TryAdd(".rgb", "image/x-rgb");
            mappings.TryAdd(".rgs", "text/plain");
            mappings.TryAdd(".rm", "application/vnd.rn-realmedia");
            mappings.TryAdd(".rmi", "audio/mid");
            mappings.TryAdd(".rmp", "application/vnd.rn-rn_music_package");
            mappings.TryAdd(".roff", "application/x-troff");
            mappings.TryAdd(".rpm", "audio/x-pn-realaudio-plugin");
            mappings.TryAdd(".rqy", "text/x-ms-rqy");
            mappings.TryAdd(".rtf", "application/rtf");
            mappings.TryAdd(".rtx", "text/richtext");
            mappings.TryAdd(".ruleset", "application/xml");
            mappings.TryAdd(".s", "text/plain");
            mappings.TryAdd(".safariextz", "application/x-safari-safariextz");
            mappings.TryAdd(".scd", "application/x-msschedule");
            mappings.TryAdd(".sct", "text/scriptlet");
            mappings.TryAdd(".sd2", "audio/x-sd2");
            mappings.TryAdd(".sdp", "application/sdp");
            mappings.TryAdd(".sea", "application/octet-stream");
            mappings.TryAdd(".searchConnector-ms", "application/windows-search-connector+xml");
            mappings.TryAdd(".setpay", "application/set-payment-initiation");
            mappings.TryAdd(".setreg", "application/set-registration-initiation");
            mappings.TryAdd(".settings", "application/xml");
            mappings.TryAdd(".sgimb", "application/x-sgimb");
            mappings.TryAdd(".sgml", "text/sgml");
            mappings.TryAdd(".sh", "application/x-sh");
            mappings.TryAdd(".shar", "application/x-shar");
            mappings.TryAdd(".shtml", "text/html");
            mappings.TryAdd(".sit", "application/x-stuffit");
            mappings.TryAdd(".sitemap", "application/xml");
            mappings.TryAdd(".skin", "application/xml");
            mappings.TryAdd(".sldm", "application/vnd.ms-powerpoint.slide.macroEnabled.12");
            mappings.TryAdd(".sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide");
            mappings.TryAdd(".slk", "application/vnd.ms-excel");
            mappings.TryAdd(".sln", "text/plain");
            mappings.TryAdd(".slupkg-ms", "application/x-ms-license");
            mappings.TryAdd(".smd", "audio/x-smd");
            mappings.TryAdd(".smi", "application/octet-stream");
            mappings.TryAdd(".smx", "audio/x-smd");
            mappings.TryAdd(".smz", "audio/x-smd");
            mappings.TryAdd(".snd", "audio/basic");
            mappings.TryAdd(".snippet", "application/xml");
            mappings.TryAdd(".snp", "application/octet-stream");
            mappings.TryAdd(".sol", "text/plain");
            mappings.TryAdd(".sor", "text/plain");
            mappings.TryAdd(".spc", "application/x-pkcs7-certificates");
            mappings.TryAdd(".spl", "application/futuresplash");
            mappings.TryAdd(".src", "application/x-wais-source");
            mappings.TryAdd(".srf", "text/plain");
            mappings.TryAdd(".SSISDeploymentManifest", "text/xml");
            mappings.TryAdd(".ssm", "application/streamingmedia");
            mappings.TryAdd(".sst", "application/vnd.ms-pki.certstore");
            mappings.TryAdd(".stl", "application/vnd.ms-pki.stl");
            mappings.TryAdd(".sv4cpio", "application/x-sv4cpio");
            mappings.TryAdd(".sv4crc", "application/x-sv4crc");
            mappings.TryAdd(".svc", "application/xml");
            mappings.TryAdd(".svg", "image/svg+xml");
            mappings.TryAdd(".swf", "application/x-shockwave-flash");
            mappings.TryAdd(".t", "application/x-troff");
            mappings.TryAdd(".tar", "application/x-tar");
            mappings.TryAdd(".tcl", "application/x-tcl");
            mappings.TryAdd(".testrunconfig", "application/xml");
            mappings.TryAdd(".testsettings", "application/xml");
            mappings.TryAdd(".tex", "application/x-tex");
            mappings.TryAdd(".texi", "application/x-texinfo");
            mappings.TryAdd(".texinfo", "application/x-texinfo");
            mappings.TryAdd(".tgz", "application/x-compressed");
            mappings.TryAdd(".thmx", "application/vnd.ms-officetheme");
            mappings.TryAdd(".thn", "application/octet-stream");
            mappings.TryAdd(".tif", "image/tiff");
            mappings.TryAdd(".tiff", "image/tiff");
            mappings.TryAdd(".tlh", "text/plain");
            mappings.TryAdd(".tli", "text/plain");
            mappings.TryAdd(".toc", "application/octet-stream");
            mappings.TryAdd(".tr", "application/x-troff");
            mappings.TryAdd(".trm", "application/x-msterminal");
            mappings.TryAdd(".trx", "application/xml");
            mappings.TryAdd(".ts", "video/vnd.dlna.mpeg-tts");
            mappings.TryAdd(".tsv", "text/tab-separated-values");
            mappings.TryAdd(".ttf", "application/octet-stream");
            mappings.TryAdd(".tts", "video/vnd.dlna.mpeg-tts");
            mappings.TryAdd(".txt", "text/plain");
            mappings.TryAdd(".u32", "application/octet-stream");
            mappings.TryAdd(".uls", "text/iuls");
            mappings.TryAdd(".user", "text/plain");
            mappings.TryAdd(".ustar", "application/x-ustar");
            mappings.TryAdd(".vb", "text/plain");
            mappings.TryAdd(".vbdproj", "text/plain");
            mappings.TryAdd(".vbk", "video/mpeg");
            mappings.TryAdd(".vbproj", "text/plain");
            mappings.TryAdd(".vbs", "text/vbscript");
            mappings.TryAdd(".vcf", "text/x-vcard");
            mappings.TryAdd(".vcproj", "application/xml");
            mappings.TryAdd(".vcs", "text/plain");
            mappings.TryAdd(".vcxproj", "application/xml");
            mappings.TryAdd(".vddproj", "text/plain");
            mappings.TryAdd(".vdp", "text/plain");
            mappings.TryAdd(".vdproj", "text/plain");
            mappings.TryAdd(".vdx", "application/vnd.ms-visio.viewer");
            mappings.TryAdd(".vml", "text/xml");
            mappings.TryAdd(".vscontent", "application/xml");
            mappings.TryAdd(".vsct", "text/xml");
            mappings.TryAdd(".vsd", "application/vnd.visio");
            mappings.TryAdd(".vsi", "application/ms-vsi");
            mappings.TryAdd(".vsix", "application/vsix");
            mappings.TryAdd(".vsixlangpack", "text/xml");
            mappings.TryAdd(".vsixmanifest", "text/xml");
            mappings.TryAdd(".vsmdi", "application/xml");
            mappings.TryAdd(".vspscc", "text/plain");
            mappings.TryAdd(".vss", "application/vnd.visio");
            mappings.TryAdd(".vsscc", "text/plain");
            mappings.TryAdd(".vssettings", "text/xml");
            mappings.TryAdd(".vssscc", "text/plain");
            mappings.TryAdd(".vst", "application/vnd.visio");
            mappings.TryAdd(".vstemplate", "text/xml");
            mappings.TryAdd(".vsto", "application/x-ms-vsto");
            mappings.TryAdd(".vsw", "application/vnd.visio");
            mappings.TryAdd(".vsx", "application/vnd.visio");
            mappings.TryAdd(".vtx", "application/vnd.visio");
            mappings.TryAdd(".wav", "audio/wav");
            mappings.TryAdd(".wave", "audio/wav");
            mappings.TryAdd(".wax", "audio/x-ms-wax");
            mappings.TryAdd(".wbk", "application/msword");
            mappings.TryAdd(".wbmp", "image/vnd.wap.wbmp");
            mappings.TryAdd(".wcm", "application/vnd.ms-works");
            mappings.TryAdd(".wdb", "application/vnd.ms-works");
            mappings.TryAdd(".wdp", "image/vnd.ms-photo");
            mappings.TryAdd(".webarchive", "application/x-safari-webarchive");
            mappings.TryAdd(".webm", "video/webm");
            mappings.TryAdd(".webp", "image/webp"); /* https://en.wikipedia.org/wiki/WebP */
            mappings.TryAdd(".webtest", "application/xml");
            mappings.TryAdd(".wiq", "application/xml");
            mappings.TryAdd(".wiz", "application/msword");
            mappings.TryAdd(".wks", "application/vnd.ms-works");
            mappings.TryAdd(".WLMP", "application/wlmoviemaker");
            mappings.TryAdd(".wlpginstall", "application/x-wlpg-detect");
            mappings.TryAdd(".wlpginstall3", "application/x-wlpg3-detect");
            mappings.TryAdd(".wm", "video/x-ms-wm");
            mappings.TryAdd(".wma", "audio/x-ms-wma");
            mappings.TryAdd(".wmd", "application/x-ms-wmd");
            mappings.TryAdd(".wmf", "application/x-msmetafile");
            mappings.TryAdd(".wml", "text/vnd.wap.wml");
            mappings.TryAdd(".wmlc", "application/vnd.wap.wmlc");
            mappings.TryAdd(".wmls", "text/vnd.wap.wmlscript");
            mappings.TryAdd(".wmlsc", "application/vnd.wap.wmlscriptc");
            mappings.TryAdd(".wmp", "video/x-ms-wmp");
            mappings.TryAdd(".wmv", "video/x-ms-wmv");
            mappings.TryAdd(".wmx", "video/x-ms-wmx");
            mappings.TryAdd(".wmz", "application/x-ms-wmz");
            mappings.TryAdd(".wpl", "application/vnd.ms-wpl");
            mappings.TryAdd(".wps", "application/vnd.ms-works");
            mappings.TryAdd(".wri", "application/x-mswrite");
            mappings.TryAdd(".wrl", "x-world/x-vrml");
            mappings.TryAdd(".wrz", "x-world/x-vrml");
            mappings.TryAdd(".wsc", "text/scriptlet");
            mappings.TryAdd(".wsdl", "text/xml");
            mappings.TryAdd(".wvx", "video/x-ms-wvx");
            mappings.TryAdd(".x", "application/directx");
            mappings.TryAdd(".xaf", "x-world/x-vrml");
            mappings.TryAdd(".xaml", "application/xaml+xml");
            mappings.TryAdd(".xap", "application/x-silverlight-app");
            mappings.TryAdd(".xbap", "application/x-ms-xbap");
            mappings.TryAdd(".xbm", "image/x-xbitmap");
            mappings.TryAdd(".xdr", "text/plain");
            mappings.TryAdd(".xht", "application/xhtml+xml");
            mappings.TryAdd(".xhtml", "application/xhtml+xml");
            mappings.TryAdd(".xla", "application/vnd.ms-excel");
            mappings.TryAdd(".xlam", "application/vnd.ms-excel.addin.macroEnabled.12");
            mappings.TryAdd(".xlc", "application/vnd.ms-excel");
            mappings.TryAdd(".xld", "application/vnd.ms-excel");
            mappings.TryAdd(".xlk", "application/vnd.ms-excel");
            mappings.TryAdd(".xll", "application/vnd.ms-excel");
            mappings.TryAdd(".xlm", "application/vnd.ms-excel");
            mappings.TryAdd(".xls", "application/vnd.ms-excel");
            mappings.TryAdd(".xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12");
            mappings.TryAdd(".xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12");
            mappings.TryAdd(".xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
            mappings.TryAdd(".xlt", "application/vnd.ms-excel");
            mappings.TryAdd(".xltm", "application/vnd.ms-excel.template.macroEnabled.12");
            mappings.TryAdd(".xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template");
            mappings.TryAdd(".xlw", "application/vnd.ms-excel");
            mappings.TryAdd(".xml", "text/xml");
            mappings.TryAdd(".xmta", "application/xml");
            mappings.TryAdd(".xof", "x-world/x-vrml");
            mappings.TryAdd(".XOML", "text/plain");
            mappings.TryAdd(".xpm", "image/x-xpixmap");
            mappings.TryAdd(".xps", "application/vnd.ms-xpsdocument");
            mappings.TryAdd(".xrm-ms", "text/xml");
            mappings.TryAdd(".xsc", "application/xml");
            mappings.TryAdd(".xsd", "text/xml");
            mappings.TryAdd(".xsf", "text/xml");
            mappings.TryAdd(".xsl", "text/xml");
            mappings.TryAdd(".xslt", "text/xml");
            mappings.TryAdd(".xsn", "application/octet-stream");
            mappings.TryAdd(".xss", "application/xml");
            mappings.TryAdd(".xtp", "application/octet-stream");
            mappings.TryAdd(".xwd", "image/x-xwindowdump");
            mappings.TryAdd(".z", "application/x-compress");
            mappings.TryAdd(".zip", "application/x-zip-compressed");
            mappings.TryAdd("application/fsharp-script", ".fsx");
            mappings.TryAdd("application/msaccess", ".adp");
            mappings.TryAdd("application/msword", ".doc");
            mappings.TryAdd("application/octet-stream", ".bin");
            mappings.TryAdd("application/onenote", ".one");
            mappings.TryAdd("application/postscript", ".eps");
            mappings.TryAdd("application/vnd.ms-excel", ".xls");
            mappings.TryAdd("application/vnd.ms-powerpoint", ".ppt");
            mappings.TryAdd("application/vnd.ms-works", ".wks");
            mappings.TryAdd("application/vnd.visio", ".vsd");
            mappings.TryAdd("application/x-director", ".dir");
            mappings.TryAdd("application/x-shockwave-flash", ".swf");
            mappings.TryAdd("application/x-x509-ca-cert", ".cer");
            mappings.TryAdd("application/xhtml+xml", ".xhtml");
            mappings.TryAdd("application/xml", ".xml");  // anomoly, .xml -> text/xml, but application/xml -> many thingss, but all are xml, so safest is .xml
            mappings.TryAdd("audio/aac", ".AAC");
            mappings.TryAdd("audio/aiff", ".aiff");
            mappings.TryAdd("audio/basic", ".snd");
            mappings.TryAdd("audio/mid", ".midi");
            mappings.TryAdd("audio/wav", ".wav");
            mappings.TryAdd("audio/x-mpegurl", ".m3u");
            mappings.TryAdd("audio/x-pn-realaudio", ".ra");
            mappings.TryAdd("audio/x-smd", ".smd");
            mappings.TryAdd("image/bmp", ".bmp");
            mappings.TryAdd("image/jpeg", ".jpg");
            mappings.TryAdd("image/pict", ".pic");
            mappings.TryAdd("image/png", ".png");
            mappings.TryAdd("image/tiff", ".tiff");
            mappings.TryAdd("image/x-macpaint", ".mac");
            mappings.TryAdd("image/x-quicktime", ".qti");
            mappings.TryAdd("message/rfc822", ".eml");
            mappings.TryAdd("text/html", ".html");
            mappings.TryAdd("text/plain", ".txt");
            mappings.TryAdd("text/scriptlet", ".wsc");
            mappings.TryAdd("text/xml", ".xml");
            mappings.TryAdd("video/3gpp", ".3gp");
            mappings.TryAdd("video/3gpp2", ".3gp2");
            mappings.TryAdd("video/mp4", ".mp4");
            mappings.TryAdd("video/mpeg", ".mpg");
            mappings.TryAdd("video/quicktime", ".mov");
            mappings.TryAdd("video/vnd.dlna.mpeg-tts", ".m2t");
            mappings.TryAdd("video/x-dv", ".dv");
            mappings.TryAdd("video/x-la-asf", ".lsf");
            mappings.TryAdd("video/x-ms-asf", ".asf");
            mappings.TryAdd("x-world/x-vrml", ".xof");

            return mappings;
        }

        public static string getMimeType(this string extension)
        {
            if (extension == null)
            {
                throw new ArgumentNullException("extension");
            }

            if (!extension.StartsWith("."))
            {
                extension = "." + extension;
            }

            string mime;

            return _mappings.Value.TryGetValue(extension, out mime) ? mime : "application/octet-stream";
        }

        public static string getExtension(this string mimeType)
        {
            if (mimeType == null)
            {
                throw new ArgumentNullException("mimeType");
            }

            if (mimeType.StartsWith("."))
            {
                throw new ArgumentException("Requested mime type is not valid: " + mimeType);
            }

            //string extension;

            var extension = _mappings.Value.FirstOrDefault(c => c.Value == mimeType).Key;//.Values.FirstOrDefault(c => c == );

            if (extension != null)
            {
                return extension;
            }

            throw new ArgumentException("Requested mime type is not registered: " + mimeType);
        }
    }
}
